{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanu\\\\Downloads\\\\event-registration-app\\\\src\\\\MyEventsPage.js\",\n  _s = $RefreshSig$();\n// MyEventsPage.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyEventsPage() {\n  _s();\n  const [registeredEvents, setRegisteredEvents] = useState([]);\n  const userId = \"tjain\"; // Replace with actual userId or fetch from state\n\n  useEffect(() => {\n    // Fetch registered events for the user from the backend\n    axios.get(`http://localhost:8080/api/events/registered?userId=${userId}`).then(response => setRegisteredEvents(response.data)).catch(error => console.error('Error fetching registered events:', error));\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-events-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: registeredEvents.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: event.eventName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: event.eventCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [event.startTime, \" - \", event.endTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(MyEventsPage, \"CPjITmVCbfq8Irm0LNPF5dUKPE8=\");\n_c = MyEventsPage;\nexport default MyEventsPage;\nvar _c;\n$RefreshReg$(_c, \"MyEventsPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MyEventsPage","_s","registeredEvents","setRegisteredEvents","userId","get","then","response","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","event","eventName","eventCategory","startTime","endTime","id","_c","$RefreshReg$"],"sources":["C:/Users/Tanu/Downloads/event-registration-app/src/MyEventsPage.js"],"sourcesContent":["// MyEventsPage.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction MyEventsPage() {\r\n    const [registeredEvents, setRegisteredEvents] = useState([]);\r\n    const userId = \"tjain\"; // Replace with actual userId or fetch from state\r\n\r\n    useEffect(() => {\r\n        // Fetch registered events for the user from the backend\r\n        axios.get(`http://localhost:8080/api/events/registered?userId=${userId}`)\r\n            .then(response => setRegisteredEvents(response.data))\r\n            .catch(error => console.error('Error fetching registered events:', error));\r\n    }, [userId]);\r\n\r\n    return (\r\n        <div className=\"my-events-page\">\r\n            <h2>My Events</h2>\r\n            <ul>\r\n                {registeredEvents.map(event => (\r\n                    <li key={event.id}>\r\n                        <div>{event.eventName}</div>\r\n                        <div>{event.eventCategory}</div>\r\n                        <div>{event.startTime} - {event.endTime}</div>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyEventsPage;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAMS,MAAM,GAAG,OAAO,CAAC,CAAC;;EAExBR,SAAS,CAAC,MAAM;IACZ;IACAC,KAAK,CAACQ,GAAG,CAAE,sDAAqDD,MAAO,EAAC,CAAC,CACpEE,IAAI,CAACC,QAAQ,IAAIJ,mBAAmB,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CACpDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC,CAAC;EAClF,CAAC,EAAE,CAACN,MAAM,CAAC,CAAC;EAEZ,oBACIL,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3Bd,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlB,OAAA;MAAAc,QAAA,EACKX,gBAAgB,CAACgB,GAAG,CAACC,KAAK,iBACvBpB,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAAc,QAAA,EAAMM,KAAK,CAACC;QAAS;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC5BlB,OAAA;UAAAc,QAAA,EAAMM,KAAK,CAACE;QAAa;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAChClB,OAAA;UAAAc,QAAA,GAAMM,KAAK,CAACG,SAAS,EAAC,KAAG,EAACH,KAAK,CAACI,OAAO;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAHzCE,KAAK,CAACK,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIb,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAAChB,EAAA,CAzBQD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA2BrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}