{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanu\\\\Downloads\\\\event-registration-app\\\\src\\\\EventList.js\";\n// EventList.js\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventList({\n  events,\n  selectedEvents,\n  toggleSelectedEvent\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-cards\",\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `event-card ${selectedEvents.includes(event.id) ? 'selected' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-name\",\n            children: event.event_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-category\",\n            children: event.event_category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-timings\",\n            children: [event.start_time, \" - \", event.end_time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleSelectedEvent(event.id),\n          children: selectedEvents.includes(event.id) ? 'Deselect' : 'Select'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","EventList","events","selectedEvents","toggleSelectedEvent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","event","includes","id","event_name","event_category","start_time","end_time","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tanu/Downloads/event-registration-app/src/EventList.js"],"sourcesContent":["// EventList.js\r\n\r\nimport React from 'react';\r\n\r\nfunction EventList({ events, selectedEvents, toggleSelectedEvent }) {\r\n    return (\r\n        <div className=\"event-list\">\r\n            <h2>All Events</h2>\r\n            <div className=\"event-cards\">\r\n                {events.map(event => (\r\n                    <div key={event.id} className={`event-card ${selectedEvents.includes(event.id) ? 'selected' : ''}`}>\r\n                        <div className=\"event-info\">\r\n                            <div className=\"event-name\">{event.event_name}</div>\r\n                            <div className=\"event-category\">{event.event_category}</div>\r\n                            <div className=\"event-timings\">{event.start_time} - {event.end_time}</div>\r\n                        </div>\r\n                        <button onClick={() => toggleSelectedEvent(event.id)}>\r\n                            {selectedEvents.includes(event.id) ? 'Deselect' : 'Select'}\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EventList;\r\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAC;EAAEC,MAAM;EAAEC,cAAc;EAAEC;AAAoB,CAAC,EAAE;EAChE,oBACIJ,OAAA;IAAKK,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBN,OAAA;MAAAM,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBV,OAAA;MAAKK,SAAS,EAAC,aAAa;MAAAC,QAAA,EACvBJ,MAAM,CAACS,GAAG,CAACC,KAAK,iBACbZ,OAAA;QAAoBK,SAAS,EAAG,cAAaF,cAAc,CAACU,QAAQ,CAACD,KAAK,CAACE,EAAE,CAAC,GAAG,UAAU,GAAG,EAAG,EAAE;QAAAR,QAAA,gBAC/FN,OAAA;UAAKK,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvBN,OAAA;YAAKK,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEM,KAAK,CAACG;UAAU;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACpDV,OAAA;YAAKK,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAEM,KAAK,CAACI;UAAc;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5DV,OAAA;YAAKK,SAAS,EAAC,eAAe;YAAAC,QAAA,GAAEM,KAAK,CAACK,UAAU,EAAC,KAAG,EAACL,KAAK,CAACM,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,eACNV,OAAA;UAAQmB,OAAO,EAAEA,CAAA,KAAMf,mBAAmB,CAACQ,KAAK,CAACE,EAAE,CAAE;UAAAR,QAAA,EAChDH,cAAc,CAACU,QAAQ,CAACD,KAAK,CAACE,EAAE,CAAC,GAAG,UAAU,GAAG;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC;MAAA,GARHE,KAAK,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASb,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACU,EAAA,GApBQnB,SAAS;AAsBlB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}