{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanu\\\\Downloads\\\\event-registration-app\\\\src\\\\EventRegistrationApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport EventList from './EventList';\nimport SelectedEventList from './SelectedEventList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventRegistrationApp() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  useEffect(() => {\n    // Fetch all events from the backend\n    axios.get('/api/events').then(response => setEvents(response.data)).catch(error => console.error('Error fetching events:', error));\n  }, []);\n\n  // Function to add or remove event from selectedEvents\n  const toggleSelectedEvent = eventId => {\n    if (selectedEvents.includes(eventId)) {\n      setSelectedEvents(selectedEvents.filter(id => id !== eventId));\n    } else {\n      setSelectedEvents([...selectedEvents, eventId]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-registration-app\",\n    children: [/*#__PURE__*/_jsxDEV(EventList, {\n      events: events,\n      selectedEvents: selectedEvents,\n      toggleSelectedEvent: toggleSelectedEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectedEventList, {\n      selectedEvents: events.filter(event => selectedEvents.includes(event.id)),\n      toggleSelectedEvent: toggleSelectedEvent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(EventRegistrationApp, \"Wo2D7MHCqdPOXlrtTjqhmI1h5Fc=\");\n_c = EventRegistrationApp;\nexport default EventRegistrationApp;\nvar _c;\n$RefreshReg$(_c, \"EventRegistrationApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","EventList","SelectedEventList","jsxDEV","_jsxDEV","EventRegistrationApp","_s","events","setEvents","selectedEvents","setSelectedEvents","get","then","response","data","catch","error","console","toggleSelectedEvent","eventId","includes","filter","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","event","_c","$RefreshReg$"],"sources":["C:/Users/Tanu/Downloads/event-registration-app/src/EventRegistrationApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport EventList from './EventList';\r\nimport SelectedEventList from './SelectedEventList';\r\n\r\nfunction EventRegistrationApp() {\r\n  const [events, setEvents] = useState([]);\r\n  const [selectedEvents, setSelectedEvents] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch all events from the backend\r\n    axios.get('/api/events')\r\n      .then(response => setEvents(response.data))\r\n      .catch(error => console.error('Error fetching events:', error));\r\n  }, []);\r\n\r\n  // Function to add or remove event from selectedEvents\r\n  const toggleSelectedEvent = (eventId) => {\r\n    if (selectedEvents.includes(eventId)) {\r\n      setSelectedEvents(selectedEvents.filter(id => id !== eventId));\r\n    } else {\r\n      setSelectedEvents([...selectedEvents, eventId]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-registration-app\">\r\n      <EventList events={events} selectedEvents={selectedEvents} toggleSelectedEvent={toggleSelectedEvent} />\r\n      <SelectedEventList selectedEvents={events.filter(event => selectedEvents.includes(event.id))} toggleSelectedEvent={toggleSelectedEvent} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EventRegistrationApp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACW,GAAG,CAAC,aAAa,CAAC,CACrBC,IAAI,CAACC,QAAQ,IAAIL,SAAS,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC1CC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,mBAAmB,GAAIC,OAAO,IAAK;IACvC,IAAIV,cAAc,CAACW,QAAQ,CAACD,OAAO,CAAC,EAAE;MACpCT,iBAAiB,CAACD,cAAc,CAACY,MAAM,CAACC,EAAE,IAAIA,EAAE,KAAKH,OAAO,CAAC,CAAC;IAChE,CAAC,MAAM;MACLT,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEU,OAAO,CAAC,CAAC;IACjD;EACF,CAAC;EAED,oBACEf,OAAA;IAAKmB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCpB,OAAA,CAACH,SAAS;MAACM,MAAM,EAAEA,MAAO;MAACE,cAAc,EAAEA,cAAe;MAACS,mBAAmB,EAAEA;IAAoB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvGxB,OAAA,CAACF,iBAAiB;MAACO,cAAc,EAAEF,MAAM,CAACc,MAAM,CAACQ,KAAK,IAAIpB,cAAc,CAACW,QAAQ,CAACS,KAAK,CAACP,EAAE,CAAC,CAAE;MAACJ,mBAAmB,EAAEA;IAAoB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvI,CAAC;AAEV;AAACtB,EAAA,CA1BQD,oBAAoB;AAAAyB,EAAA,GAApBzB,oBAAoB;AA4B7B,eAAeA,oBAAoB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}