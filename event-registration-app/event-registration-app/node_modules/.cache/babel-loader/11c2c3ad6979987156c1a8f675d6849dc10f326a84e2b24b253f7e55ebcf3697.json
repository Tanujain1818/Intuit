{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tanu\\\\Downloads\\\\event-registration-app\\\\src\\\\EventRegistrationApp.js\",\n  _s = $RefreshSig$();\n// EventRegistrationApp.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport EventList from './EventList';\nimport SelectedEvents from './SelectedEvents';\nimport { toast } from 'react-toastify';\nimport { useToast } from './useToast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventRegistrationApp() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const {\n    showError\n  } = useToast();\n\n  // Function to fetch registered events for the user\n  const fetchRegisteredEvents = userId => {\n    axios.get(`http://localhost:8080/api/events/registered?userId=${userId}`).then(response => {\n      const registeredEventIds = response.data.map(event => event.id);\n      setSelectedEvents(registeredEventIds);\n    }).catch(error => console.error('Error fetching registered events:', error));\n  };\n  useEffect(() => {\n    // Fetch all events from the backend\n    axios.get('http://localhost:8080/api/events').then(response => setEvents(response.data)).catch(error => console.error('Error fetching events:', error));\n  }, []);\n\n  // Function to check if an event conflicts with already selected events\n  const hasConflict = eventId => {\n    const selectedEventTimes = selectedEvents.map(id => {\n      const event = events.find(event => event.id === id);\n      return {\n        startTime: new Date(event.startTime),\n        endTime: new Date(event.endTime)\n      };\n    });\n    const newEvent = events.find(event => event.id === eventId);\n    const newEventStartTime = new Date(newEvent.startTime);\n    const newEventEndTime = new Date(newEvent.endTime);\n    return selectedEventTimes.some(time => {\n      return newEventStartTime >= time.startTime && newEventStartTime < time.endTime || newEventEndTime > time.startTime && newEventEndTime <= time.endTime || newEventStartTime <= time.startTime && newEventEndTime >= time.endTime;\n    });\n  };\n\n  // Function to add or remove event from selectedEvents\n  const toggleSelectedEvent = async eventId => {\n    // Fetch registered events for the user\n    const userId = \"tjain\";\n    await fetchRegisteredEvents(userId);\n    if (selectedEvents.includes(eventId)) {\n      unregisterEvent(eventId);\n      setSelectedEvents(selectedEvents.filter(id => id !== eventId));\n    } else if (selectedEvents.length < 3 && !hasConflict(eventId)) {\n      registerEvent(eventId);\n      setSelectedEvents([...selectedEvents, eventId]);\n    } else if (selectedEvents.length >= 3) {\n      showError('You can only select up to 3 events.');\n    } else {\n      showError('Event timings conflict with already selected events.');\n    }\n  };\n\n  // Function to register the user for an event\n  const registerEvent = eventId => {\n    // Make a POST request to register the event\n    const userId = \"tjain\"; // Assuming userId is known\n    console.log('userid is :', userId);\n    console.log('eventid is :', eventId);\n    axios.post(`http://localhost:8080/api/events/register?userId=${userId}&eventId=${eventId}`).then(response => {\n      // Handle success\n      console.log('Event registered successfully:', response.data);\n      toast.success('Event registered successfully.');\n    }).catch(error => {\n      // Handle error\n      console.error('Error registering event:', error.response);\n      toast.error('Error registering event.');\n    });\n  };\n\n  // Function to unregister the user from an event\n  const unregisterEvent = eventId => {\n    // Make a POST request to unregister the event\n    const userId = \"tjain\"; // Assuming userId is known\n    axios.post(`http://localhost:8080/api/events/unregister?userId=${userId}&eventId=${eventId}`).then(response => {\n      // Handle success\n      console.log('Event unregistered successfully:', response.data);\n      toast.success('Event unregistered successfully.');\n    }).catch(error => {\n      // Handle error\n      console.error('Error unregistering event:', error.response);\n      toast.error('Error unregistering event.');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"event-registration-app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-list-container\",\n        children: /*#__PURE__*/_jsxDEV(EventList, {\n          events: events,\n          selectedEvents: selectedEvents,\n          toggleSelectedEvent: toggleSelectedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-events-container\",\n        children: /*#__PURE__*/_jsxDEV(SelectedEvents, {\n          events: events,\n          selectedEvents: selectedEvents,\n          toggleSelectedEvent: toggleSelectedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(EventRegistrationApp, \"3wl4k3jcvvrOaASZuNW/vrVu4uI=\", false, function () {\n  return [useToast];\n});\n_c = EventRegistrationApp;\nexport default EventRegistrationApp;\nvar _c;\n$RefreshReg$(_c, \"EventRegistrationApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","EventList","SelectedEvents","toast","useToast","jsxDEV","_jsxDEV","EventRegistrationApp","_s","events","setEvents","selectedEvents","setSelectedEvents","showError","fetchRegisteredEvents","userId","get","then","response","registeredEventIds","data","map","event","id","catch","error","console","hasConflict","eventId","selectedEventTimes","find","startTime","Date","endTime","newEvent","newEventStartTime","newEventEndTime","some","time","toggleSelectedEvent","includes","unregisterEvent","filter","length","registerEvent","log","post","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tanu/Downloads/event-registration-app/src/EventRegistrationApp.js"],"sourcesContent":["// EventRegistrationApp.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport EventList from './EventList';\r\nimport SelectedEvents from './SelectedEvents';\r\nimport { toast } from 'react-toastify';\r\nimport { useToast } from './useToast';\r\n\r\n\r\nfunction EventRegistrationApp() {\r\n    const [events, setEvents] = useState([]);\r\n    const [selectedEvents, setSelectedEvents] = useState([]);\r\n    const { showError } = useToast();\r\n    \r\n    // Function to fetch registered events for the user\r\n    const fetchRegisteredEvents = (userId) => {\r\n        axios.get(`http://localhost:8080/api/events/registered?userId=${userId}`)\r\n            .then(response => {\r\n                const registeredEventIds = response.data.map(event => event.id);\r\n                setSelectedEvents(registeredEventIds);\r\n            })\r\n            .catch(error => console.error('Error fetching registered events:', error));\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Fetch all events from the backend\r\n        axios.get('http://localhost:8080/api/events')\r\n            .then(response => setEvents(response.data))\r\n            .catch(error => console.error('Error fetching events:', error));\r\n    }, []);\r\n\r\n    \r\n\r\n       // Function to check if an event conflicts with already selected events\r\n       const hasConflict = (eventId) => {\r\n        const selectedEventTimes = selectedEvents.map(id => {\r\n            const event = events.find(event => event.id === id);\r\n            return {\r\n                startTime: new Date(event.startTime),\r\n                endTime: new Date(event.endTime)\r\n            };\r\n        });\r\n\r\n        const newEvent = events.find(event => event.id === eventId);\r\n        const newEventStartTime = new Date(newEvent.startTime);\r\n        const newEventEndTime = new Date(newEvent.endTime);\r\n\r\n        return selectedEventTimes.some(time => {\r\n            return (newEventStartTime >= time.startTime && newEventStartTime < time.endTime) ||\r\n                   (newEventEndTime > time.startTime && newEventEndTime <= time.endTime) ||\r\n                   (newEventStartTime <= time.startTime && newEventEndTime >= time.endTime);\r\n        });\r\n    };\r\n\r\n    // Function to add or remove event from selectedEvents\r\n    const toggleSelectedEvent = async (eventId) => {\r\n        \r\n        // Fetch registered events for the user\r\n        const userId = \"tjain\";\r\n        await fetchRegisteredEvents(userId);\r\n\r\n        if (selectedEvents.includes(eventId)) {\r\n            unregisterEvent(eventId);\r\n            setSelectedEvents(selectedEvents.filter(id => id !== eventId));\r\n        }  else if(selectedEvents.length < 3 && !hasConflict(eventId)) {\r\n            registerEvent(eventId);\r\n            setSelectedEvents([...selectedEvents, eventId]);\r\n        } else if (selectedEvents.length >= 3) {\r\n            showError('You can only select up to 3 events.');\r\n        } else {\r\n            showError('Event timings conflict with already selected events.');\r\n        }\r\n    };\r\n\r\n    // Function to register the user for an event\r\n    const registerEvent = (eventId) => {\r\n        // Make a POST request to register the event\r\n        const userId = \"tjain\"; // Assuming userId is known\r\n        console.log('userid is :',userId);\r\n        console.log('eventid is :',eventId);\r\n        axios.post(`http://localhost:8080/api/events/register?userId=${userId}&eventId=${eventId}`)\r\n            .then(response => {\r\n                // Handle success\r\n                console.log('Event registered successfully:', response.data);\r\n                toast.success('Event registered successfully.');\r\n            })\r\n            .catch(error => {\r\n                // Handle error\r\n                console.error('Error registering event:', error.response);\r\n                toast.error('Error registering event.');\r\n            });\r\n    };\r\n\r\n    // Function to unregister the user from an event\r\n    const unregisterEvent = (eventId) => {\r\n        // Make a POST request to unregister the event\r\n        const userId = \"tjain\"; // Assuming userId is known\r\n        axios.post(`http://localhost:8080/api/events/unregister?userId=${userId}&eventId=${eventId}`)\r\n            .then(response => {\r\n                // Handle success\r\n                console.log('Event unregistered successfully:', response.data);\r\n                toast.success('Event unregistered successfully.');\r\n            })\r\n            .catch(error => {\r\n                // Handle error\r\n                console.error('Error unregistering event:', error.response);\r\n                toast.error('Error unregistering event.');\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"event-registration-app\">\r\n            <div className=\"container\">\r\n                <div className=\"event-list-container\">\r\n            <EventList events={events} selectedEvents={selectedEvents} toggleSelectedEvent={toggleSelectedEvent} />\r\n            </div>\r\n            <div className=\"selected-events-container\">\r\n            <SelectedEvents events={events} selectedEvents={selectedEvents} toggleSelectedEvent={toggleSelectedEvent} />\r\n            </div>\r\n            </div>\r\n         </div>    \r\n    );\r\n}\r\n\r\nexport default EventRegistrationApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}